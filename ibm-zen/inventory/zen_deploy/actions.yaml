actions:
  actionDefs:
    mirrorImages:
      metadata:
        name: "mirrorImages"
        description: "Mirrors the images to a local registry using oc"
        case.launcher.type: "script"
        case.cli.alias: "mirror-images"
      roles:
        - clusterAdmin
      requires:
        and:
          - "/case/prereqs/client/oc"
          - "/case/prereqs/client/skopeo"
      k8sPermissions:
        rules: []

    # actions related to local docker registry
    initRegistry:
      metadata:
        name: "initRegistry"
        description: "Initialize a local docker registry"
        case.launcher.type: "script"
        case.cli.alias: "init-registry"
      roles:
        - clusterAdmin
      requires:
        and:
          - "/case/prereqs/client/openssl"
          - "/case/prereqs/client/htpasswd"
      k8sPermissions:
        rules: []

    startRegistry:
      metadata:
        name: "startRegistry"
        description: "Start a local docker registry container"
        case.launcher.type: "script"
        case.cli.alias: "start-registry"
      roles:
        - clusterAdmin
      requires:
        or:
          - "/case/prereqs/client/podman"
          - "/case/prereqs/client/docker"
      k8sPermissions:
        rules: []

    stopRegistry:
      metadata:
        name: "stopRegistry"
        description: "Stop a local docker registry container"
        case.launcher.type: "script"
        case.cli.alias: "stop-registry"
      roles:
        - clusterAdmin
      requires:
        or:
          - "/case/prereqs/client/podman"
          - "/case/prereqs/client/docker"
      k8sPermissions:
        rules: []

    applyCustomResources:
      metadata:
        name: applyCustomResources
        description: "create a custom resource to install zen service"
        case.launcher.type: "script"
        case.cli.alias: "apply-custom-resources"
        case.launcher.isdefault: false
      roles: []
      k8sPermissions:
        rules: []
    uninstallOperatorNative:
      metadata:
        name: "uninstallOperatorNative"
        description: "uninstall the cloud pak for data operator via the cli"
        case.launcher.type: "script"
        case.cli.alias: "uninstall-operator-native"
        case.launcher.isdefault: false
      roles: []
      k8sPermissions:
        rules: []
    installOperatorNative:
      metadata:
        name: "installOperatorNative"
        description: "install the cloud pak for data operator via non-OLM"
        case.launcher.type: "script"
        case.cli.alias: "install-operator-native"
        case.launcher.isdefault: true
      roles:
      - clusterAdmin
      k8sPermissions:
        rules:
            - rule:
                group: rbac.authorization.k8s.io
                resource: clusterroles
                verbs:
                - get
                - list
                - watch
                - create
                - patch
                - update
                version: '*'
            - rule:
                group: apiextensions.k8s.io
                resource: customresourcedefinitions
                verbs:
                - get
                - list
                - watch
                - create
                - patch
                - update
                version: v1beta1
            # Resolve this permission check ONLY if the prereq resolves to true.
            - ifExpression:
                "!":
                - "/case/prereqs/k8sDistros/openshift"
              rule:
                group: policy
                resource: podsecuritypolicies
                verbs:
                - get
                - list
                - watch
                - create
                - patch
                - update
            - ifExpression:
                "/prereqs/k8sDistros/openshift"
              rule:
                group: security.openshift.io
                resource: securitycontextconstraints
                verbs:
                - get
                - list
                - watch
                - create
                - patch
                - update
    uninstallOperator:
      metadata:
        name: "uninstallOperator"
        description: "uninstall the cloud pak for data operator OLM"
        case.launcher.type: "script"
        case.cli.alias: "uninstall-operator"
        case.launcher.isdefault: false
      roles: []
      k8sPermissions:
        rules: []
    installOperator:
      metadata:
        name: "installOperator"
        description: "install the cloud pak for data operator via OLM"
        case.launcher.type: "script"
        case.cli.alias: "install-operator"
        case.launcher.isdefault: false
      roles:
      - clusterAdmin
      k8sPermissions:
        rules:
            - rule:
                group: rbac.authorization.k8s.io
                resource: clusterroles
                verbs:
                - get
                - list
                - watch
                - create
                - patch
                - update
                version: '*'
            - rule:
                group: apiextensions.k8s.io
                resource: customresourcedefinitions
                verbs:
                - get
                - list
                - watch
                - create
                - patch
                - update
                version: v1beta1
            # Resolve this permission check ONLY if the prereq resolves to true.
            - ifExpression:
                "!":
                - "/case/prereqs/k8sDistros/openshift"
              rule:
                group: policy
                resource: podsecuritypolicies
                verbs:
                - get
                - list
                - watch
                - create
                - patch
                - update
            - ifExpression:
                "/prereqs/k8sDistros/openshift"
              rule:
                group: security.openshift.io
                resource: securitycontextconstraints
                verbs:
                - get
                - list
                - watch
                - create
                - patch
                - update                

    configureCredsAirgap:
      metadata:
        name: "configureCredsAirgap"
        description: "configures login credentails for an image registry"
        case.launcher.type: "script"
        case.cli.alias: "configure-creds-airgap"
      roles:
      - clusterAdmin
      k8sPermissions:
        rules: []

    configureClusterAirgapNative:
      metadata:
        name: "configureClusterAirgapNative"
        description: "configures operator registry and external cpd secret"
        case.launcher.type: "script"
        case.cli.alias: "configure-cluster-airgap-native"
      roles:
      - clusterAdmin
      requires:
        metadata:
          message:
            onFailure: |
              The configureClusterAirgapNative action must be run on either OpenShift Container Platform on amd64 Linux.
              The minimum level of Kubernetes on each platform are described in the CASE prerequisites.
              The client must have oc installed to execute the launcher script.
        and:
        - "/case/prereqs/k8sDistros/kubernetes"
        - "/case/prereqs/k8sDistros/openshift"
        - "/case/prereqs/client/oc"
      k8sPermissions:
        rules: []

    configureClusterAirgap:
      metadata:
        name: "configureClusterAirgap"
        description: "configures global pullsecret and imagesourcecontentpolicy"
        case.launcher.type: "script"
        case.cli.alias: "configure-cluster-airgap"
      roles:
      - clusterAdmin
      requires:
        metadata:
          message:
            onFailure: |
              The configureClusterAirgap action must be run on either OpenShift Container Platform on amd64 Linux.
              The minimum level of Kubernetes on each platform are described in the CASE prerequisites.
              The client must have oc installed to execute the launcher script.
        and:
        - "/case/prereqs/k8sDistros/kubernetes"
        - "/case/prereqs/k8sDistros/openshift"
        - "/case/prereqs/client/oc"
      k8sPermissions:
        rules: []


    installCatalog:
      metadata:
        name: "installCatalog"
        description: "Installs the catalog"
        case.launcher.type: "script"
        case.cli.alias: "install-catalog"
      roles:
      - clusterAdmin
      requires: 
        and:
        - "/case/prereqs/k8sResources/restrictedSCC" 
        - "/case/prereqs/client/oc"
      k8sPermissions:
        rules: []

    uninstallCatalog:
      metadata:
        name: "uninstallCatalog"
        description: "Uninstalls the catalog"
        case.launcher.type: "script"
        case.cli.alias: "uninstall-catalog"
      roles:
      - clusterAdmin
      requires: "/case/prereqs/client/oc"
      k8sPermissions:
        rules: []

    runAdm:
      metadata:
        name: "runAdm"
        description: "install the cloud pak for data resources"
        case.launcher.type: "script"
        case.cli.alias: "run-adm"
      roles:
      - clusterAdmin
      k8sPermissions:
        rules:
            - rule:
                group: rbac.authorization.k8s.io
                resource: clusterroles
                verbs:
                - get
                - list
                - watch
                - create
                - patch
                - update
                version: '*'
            - rule:
                group: apiextensions.k8s.io
                resource: customresourcedefinitions
                verbs:
                - get
                - list
                - watch
                - create
                - patch
                - update
                version: v1beta1
            # Resolve this permission check ONLY if the prereq resolves to true.
            - ifExpression:
                "!":
                - "/case/prereqs/k8sDistros/openshift"
              rule:
                group: policy
                resource: podsecuritypolicies
                verbs:
                - get
                - list
                - watch
                - create
                - patch
                - update
            - ifExpression:
                "/prereqs/k8sDistros/openshift"
              rule:
                group: security.openshift.io
                resource: securitycontextconstraints
                verbs:
                - get
                - list
                - watch
                - create
                - patch
                - update
